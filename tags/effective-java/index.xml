<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Effective Java on noor.guru</title>
    <link>https://www.noor.guru/tags/effective-java/</link>
    <description>Recent content in Effective Java on noor.guru</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 27 May 2021 00:27:28 +0300</lastBuildDate><atom:link href="https://www.noor.guru/tags/effective-java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java Best Practices 01 | Static Factory Methods Over Constructors</title>
      <link>https://www.noor.guru/posts/java-bp/static-factory-methods-over-constructors/</link>
      <pubDate>Thu, 27 May 2021 00:27:28 +0300</pubDate>
      
      <guid>https://www.noor.guru/posts/java-bp/static-factory-methods-over-constructors/</guid>
      <description>Static Factory Methods Consider using Static Factory Methods Instead of Constructors
The static factory method is a method that returns an instance of the class.
Example In this example, we will build some HTML elements using Java. Here is the base class.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 class HtmlElement { private final String tag; private final String content; public HtmlElement(String tag, String content) { this.</description>
    </item>
    
  </channel>
</rss>
